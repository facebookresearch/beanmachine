version: 2.1

commands:

  dev_install_beanmachine:
    description: "Install beanmachine[dev] in editable mode via pip"
    steps:
      - run:
          name: "Install beanmachine[dev]"
          command: sudo pip install --progress-bar off -v -e .[dev]

  user_install_beanmachine:
    description: "Install beanmachine as an ordinary user would via pip"
    steps:
      - run:
          name: "Install beanmachine"
          command: pip install --progress-bar off -v .

  pip_install_pytest_patch:
    steps:
      - run:
          name: "Install a patched pytest version from PR (pytest-dev/pytest#7870)"
          command: >
            pip install --progress-bar off
            git+https://github.com/pytest-dev/pytest.git@refs/pull/7870/head

  apt_get_install_deps:
    description: "Install beanmachine graph dependencies via apt-get"
    steps:
      - run:
          name: "Update package lists"
          command: sudo apt-get update
      - run:
          name: "Install Boost and Eigen"
          command: sudo apt-get install libboost-dev libeigen3-dev

  pip_lint_install:
    description: "Install lint packages via pip"
    steps:
      - run:
          name: "Upgrade pip"
          command: pip install --progress-bar off --upgrade pip
      - run:
          name: "Install lint packages"
          command: pip install --progress-bar off black==20.8b1 usort flake8

  install_miniconda_macos:
    steps:
      - run:
          name: "Download Miniconda installation script from anaconda.com"
          command: >
            curl https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
            -o miniconda.sh
      - run:
          name: "Install Miniconda"
          command: |
            bash miniconda.sh -b -p $HOME/miniconda
            source "$HOME/miniconda/etc/profile.d/conda.sh"
            conda init
            conda config --set always_yes yes --set changeps1 no
            conda update -q conda
            conda info -a  # print out info that're useful for debug
      - run:
          name: "Create a new conda environment (Python 3.8)"
          command: |
            conda create -q -n test_env python=3.8
            # activate test_env by default for the subsequent commands
            echo "conda activate test_env" >> /Users/distiller/.bash_profile

  pip_list:
    description: "Print out package info to help with debug"
    steps:
      - run:
          name: "Pip list installed packages"
          command: pip list

  brew_install_deps:
    steps:
      - run:
          name: "Install LLVM with OpenMP Support"
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew install llvm libomp
            echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> \
              /Users/distiller/.bash_profile

  conda_install_beanmachine:
    steps:
      - run:
          name: "Install Boost and Eigen with conda"
          command: conda install eigen boost
      - run:
          name: "Install beanmachine in editable mode"
          command: CC=clang CXX=clang++ pip install --progress-bar off -e .[dev]

  lint_flake8:
    description: "Lint with flake8"
    steps:
      - run:
          name: "Lint with flake8"
          command: flake8

  lint_usort:
    description: "Lint with usort"
    steps:
      - run:
          name: "Lint with usort"
          command: >
            usort check .

  lint_black:
    description: "Lint with black"
    steps:
      - run:
          name: "Lint with black"
          command: black --check .

  dev_unit_tests:
    description: "Run unit tests when installed in dev mode"
    steps:
      - run:
          name: "Run unit tests"
          command: pytest --cov=. --cov-report term-missing

  user_unit_tests:
    description: "Run unit tests as an ordinary user"
    steps:
      - run:
          name: "Install test dependencies"
          command: pip install pytest
      - run:
          name: "Run unit tests"
          no_output_timeout: 1h
          command: pytest -vv

  nightly_tests:
    description: "Run nightly tests as an ordinary user"
    steps:
      - run:
          name: "Install test dependencies"
          command: pip install pytest
      - run:
          name: "Run nightly tests and report overall runtimes"
          no_output_timeout: 1h
          command: |
            export PYTHONUNBUFFERED=1
            pytest -o python_files="*_nightly.py" --durations=0


jobs:

  dev_install_test_py38_pip:
    docker:
      - image: circleci/python:3.8
    steps:
      - apt_get_install_deps
      - checkout
      - dev_install_beanmachine
      - pip_install_pytest_patch
      - pip_list
      - dev_unit_tests

  user_install_test_py38_pip:
    docker:
      - image: circleci/python:3.8
    steps:
      - apt_get_install_deps
      - checkout
      - user_install_beanmachine
      - pip_install_pytest_patch
      - pip_list
      - user_unit_tests

  macos_dev_install_test_py38_conda:
    macos:
      xcode: 12.0
    steps:
      - checkout
      - install_miniconda_macos
      - brew_install_deps
      - conda_install_beanmachine
      - pip_install_pytest_patch
      - pip_list
      - dev_unit_tests

  lint_py38_pip:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - pip_lint_install
      - pip_install_pytest_patch
      - pip_list
      - lint_flake8
      - lint_usort
      - lint_black

  nightly_test_py38_pip:
    docker:
      - image: circleci/python:3.8
    steps:
      - apt_get_install_deps
      - checkout
      - user_install_beanmachine
      - pip_install_pytest_patch
      - pip_list
      - nightly_tests


aliases:

  - &exclude_ghpages_fbconfig
    branches:
      ignore:
        - gh-pages
        - fb-config


workflows:

  lint_and_test:
    jobs:
      - lint_py38_pip:
          filters: *exclude_ghpages_fbconfig

      - dev_install_test_py38_pip:
          filters: *exclude_ghpages_fbconfig

      - user_install_test_py38_pip:
          filters: *exclude_ghpages_fbconfig

      - macos_dev_install_test_py38_conda:
          filters: *exclude_ghpages_fbconfig

  nightly_test:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - nightly_test_py38_pip
