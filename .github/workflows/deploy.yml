name: Deployment

on:
  # this workflow can only be manually triggered for now.
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Where to deploy the artifacts? Only build, deploy to test PyPI, deploy to PyPI.'
        required: true
        type: choice
        default: 'test'
        options:
          - build
          - test
          - prod

env:
  PYTHONUNBUFFERED: 1

jobs:
  build-wheel:
    # do not run on forked repo
    if: github.repository == 'facebookresearch/beanmachine'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9, 3.10]
    defaults:
      run:
        # https://github.com/conda-incubator/setup-miniconda/tree/v2#use-a-default-shell
        shell: bash -l {0}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Miniconda with Python ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        miniconda-version: "latest"
        python-version: ${{ matrix.python-version }}
        activate-environment: build_env

    - name: Install dependencies
      run: |
        conda install -y eigen boost
        python -m pip install --upgrade pip
        pip install -U build

    - name: Building Bean Machine wheel for ${{ matrix.os }}
      run: python -m build --wheel

    - name: Build Bean Machine source distribution
      # source distribution only needs to be built on one OS
      if: matrix.os == 'macos-latest'
      run: python -m build --sdist

    - name: Install built Bean Machine dist
      run: pip install dist/*.whl

    - name: Install pytest 7.0 (with a importlib patch in pytest-dev/pytest#7870)
      run: pip install git+https://github.com/pytest-dev/pytest.git@7.0.0.dev0

    - name: Print out package info to help with debug
      run: pip list

    - name: Run unit tests with pytest
      run: pytest

    - name: Sending wheels to the deployment workflow
      uses: actions/upload-artifact@v2
      with:
        name: beanmachine-${{ matrix.os }}
        path: dist/*

  build-linux-wheel:
    if: github.repository == 'facebookresearch/beanmachine'
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        python-version: [cp37-cp37m, cp38-cp38, cp39-cp39, cp310-cp310]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        yum install -y boost169-devel eigen3-devel
        /opt/python/${{ matrix.python-version }}/bin/python -m pip install --upgrade pip
        /opt/python/${{ matrix.python-version }}/bin/pip install -U build

    - name: Building Bean Machine wheel for Linux
      run: /opt/python/${{ matrix.python-version }}/bin/python -m build --wheel

    - name: Repair wheel to support manylinux
      run: auditwheel -v repair dist/*

    - name: Install built Bean Machine dist
      run: /opt/python/${{ matrix.python-version }}/bin/pip install wheelhouse/*.whl

    - name: Install pytest 7.0 (with a importlib patch in pytest-dev/pytest#7870)
      run: /opt/python/${{ matrix.python-version }}/bin/pip install git+https://github.com/pytest-dev/pytest.git@7.0.0.dev0

    - name: Print out package info to help with debug
      run: /opt/python/${{ matrix.python-version }}/bin/pip list

    - name: Run unit tests with pytest
      run: /opt/python/${{ matrix.python-version }}/bin/pytest

    - name: Sending wheels to the deployment workflow
      uses: actions/upload-artifact@v2
      with:
        name: beanmachine-manylinux
        path: wheelhouse/*

  publish-to-pypi:
    runs-on: ubuntu-latest
    needs:
      - build-wheel
      - build-linux-wheel
    steps:
    - name: Download wheels from previous jobs
      # by default this will download all artifacts
      uses: actions/download-artifact@v2

    - name: Reorganize file structure
      # PyPI publish action uploads everything under dist/*
      run: |
        ls -R
        mkdir dist
        mv beanmachine-*/* dist/

    - name: Publish to Test PyPI
      if: github.event.inputs.deploy == 'test'
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        password: ${{ secrets.TEST_PYPI_PASSWORD }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true
        verbose: true

    - name: Publish to PyPI
      if: github.event.inputs.deploy == 'prod' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        password: ${{ secrets.PYPI_PASSWORD }}
        verbose: true
