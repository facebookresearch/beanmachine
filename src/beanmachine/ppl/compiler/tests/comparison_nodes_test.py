# Copyright (c) Facebook, Inc. and its affiliates.
"""Tests for bmg_nodes.py"""
import unittest

from beanmachine.ppl.compiler.bmg_nodes import (
    BernoulliNode,
    BetaNode,
    BinomialNode,
    EqualNode,
    GreaterThanEqualNode,
    GreaterThanNode,
    HalfCauchyNode,
    LessThanEqualNode,
    LessThanNode,
    NaturalNode,
    NegateNode,
    NormalNode,
    NotEqualNode,
    PositiveRealNode,
    ProbabilityNode,
    RealNode,
    SampleNode,
)
from beanmachine.ppl.compiler.bmg_types import Boolean


class ComparisonNodesTest(unittest.TestCase):
    def test_inf_type_comparison(self) -> None:
        """test_inf_type_comparison"""

        # BMG right now has no support for comparison operators, so the
        # only reason we have these nodes in the graph accumulator is
        # (1) to report errors on them, should a model have a
        # comparison of a graph node, and (2) to be ready for a day
        # when BMG does support them.

        prob = ProbabilityNode(0.5)
        pos = PositiveRealNode(1.5)
        real = RealNode(-1.5)
        nat = NaturalNode(2)
        bern = SampleNode(BernoulliNode(prob))
        beta = SampleNode(BetaNode(pos, pos))
        bino = SampleNode(BinomialNode(nat, prob))
        half = SampleNode(HalfCauchyNode(pos))
        norm = SampleNode(NormalNode(real, pos))
        neg = NegateNode(half)

        # Every comparison node is treated as producing a Boolean.

        self.assertEqual(GreaterThanNode(bern, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(bern, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(bern, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(bern, half).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(bern, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(bern, neg).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(beta, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(beta, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(beta, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(beta, half).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(beta, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(beta, neg).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(bino, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(bino, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(bino, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(bino, half).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(bino, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(bino, neg).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(half, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(half, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(half, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(half, half).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(half, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(half, neg).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(norm, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(norm, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(norm, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(norm, half).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(norm, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(norm, neg).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(neg, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(neg, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(neg, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(neg, half).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(neg, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanNode(neg, neg).inf_type, Boolean)

        self.assertEqual(GreaterThanEqualNode(bern, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(bern, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(bern, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(bern, half).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(bern, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(bern, neg).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(beta, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(beta, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(beta, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(beta, half).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(beta, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(beta, neg).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(bino, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(bino, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(bino, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(bino, half).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(bino, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(bino, neg).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(half, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(half, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(half, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(half, half).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(half, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(half, neg).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(norm, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(norm, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(norm, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(norm, half).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(norm, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(norm, neg).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(neg, bern).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(neg, beta).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(neg, bino).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(neg, half).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(neg, norm).inf_type, Boolean)
        self.assertEqual(GreaterThanEqualNode(neg, neg).inf_type, Boolean)

        self.assertEqual(LessThanNode(bern, bern).inf_type, Boolean)
        self.assertEqual(LessThanNode(bern, beta).inf_type, Boolean)
        self.assertEqual(LessThanNode(bern, bino).inf_type, Boolean)
        self.assertEqual(LessThanNode(bern, half).inf_type, Boolean)
        self.assertEqual(LessThanNode(bern, norm).inf_type, Boolean)
        self.assertEqual(LessThanNode(bern, neg).inf_type, Boolean)
        self.assertEqual(LessThanNode(beta, bern).inf_type, Boolean)
        self.assertEqual(LessThanNode(beta, beta).inf_type, Boolean)
        self.assertEqual(LessThanNode(beta, bino).inf_type, Boolean)
        self.assertEqual(LessThanNode(beta, half).inf_type, Boolean)
        self.assertEqual(LessThanNode(beta, norm).inf_type, Boolean)
        self.assertEqual(LessThanNode(beta, neg).inf_type, Boolean)
        self.assertEqual(LessThanNode(bino, bern).inf_type, Boolean)
        self.assertEqual(LessThanNode(bino, beta).inf_type, Boolean)
        self.assertEqual(LessThanNode(bino, bino).inf_type, Boolean)
        self.assertEqual(LessThanNode(bino, half).inf_type, Boolean)
        self.assertEqual(LessThanNode(bino, norm).inf_type, Boolean)
        self.assertEqual(LessThanNode(bino, neg).inf_type, Boolean)
        self.assertEqual(LessThanNode(half, bern).inf_type, Boolean)
        self.assertEqual(LessThanNode(half, beta).inf_type, Boolean)
        self.assertEqual(LessThanNode(half, bino).inf_type, Boolean)
        self.assertEqual(LessThanNode(half, half).inf_type, Boolean)
        self.assertEqual(LessThanNode(half, norm).inf_type, Boolean)
        self.assertEqual(LessThanNode(half, neg).inf_type, Boolean)
        self.assertEqual(LessThanNode(norm, bern).inf_type, Boolean)
        self.assertEqual(LessThanNode(norm, beta).inf_type, Boolean)
        self.assertEqual(LessThanNode(norm, bino).inf_type, Boolean)
        self.assertEqual(LessThanNode(norm, half).inf_type, Boolean)
        self.assertEqual(LessThanNode(norm, norm).inf_type, Boolean)
        self.assertEqual(LessThanNode(norm, neg).inf_type, Boolean)
        self.assertEqual(LessThanNode(neg, bern).inf_type, Boolean)
        self.assertEqual(LessThanNode(neg, beta).inf_type, Boolean)
        self.assertEqual(LessThanNode(neg, bino).inf_type, Boolean)
        self.assertEqual(LessThanNode(neg, half).inf_type, Boolean)
        self.assertEqual(LessThanNode(neg, norm).inf_type, Boolean)
        self.assertEqual(LessThanNode(neg, neg).inf_type, Boolean)

        self.assertEqual(LessThanEqualNode(bern, bern).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(bern, beta).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(bern, bino).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(bern, half).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(bern, norm).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(bern, neg).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(beta, bern).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(beta, beta).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(beta, bino).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(beta, half).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(beta, norm).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(beta, neg).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(bino, bern).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(bino, beta).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(bino, bino).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(bino, half).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(bino, norm).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(bino, neg).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(half, bern).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(half, beta).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(half, bino).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(half, half).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(half, norm).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(half, neg).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(norm, bern).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(norm, beta).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(norm, bino).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(norm, half).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(norm, norm).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(norm, neg).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(neg, bern).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(neg, beta).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(neg, bino).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(neg, half).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(neg, norm).inf_type, Boolean)
        self.assertEqual(LessThanEqualNode(neg, neg).inf_type, Boolean)

        self.assertEqual(EqualNode(bern, bern).inf_type, Boolean)
        self.assertEqual(EqualNode(bern, beta).inf_type, Boolean)
        self.assertEqual(EqualNode(bern, bino).inf_type, Boolean)
        self.assertEqual(EqualNode(bern, half).inf_type, Boolean)
        self.assertEqual(EqualNode(bern, norm).inf_type, Boolean)
        self.assertEqual(EqualNode(bern, neg).inf_type, Boolean)
        self.assertEqual(EqualNode(beta, bern).inf_type, Boolean)
        self.assertEqual(EqualNode(beta, beta).inf_type, Boolean)
        self.assertEqual(EqualNode(beta, bino).inf_type, Boolean)
        self.assertEqual(EqualNode(beta, half).inf_type, Boolean)
        self.assertEqual(EqualNode(beta, norm).inf_type, Boolean)
        self.assertEqual(EqualNode(beta, neg).inf_type, Boolean)
        self.assertEqual(EqualNode(bino, bern).inf_type, Boolean)
        self.assertEqual(EqualNode(bino, beta).inf_type, Boolean)
        self.assertEqual(EqualNode(bino, bino).inf_type, Boolean)
        self.assertEqual(EqualNode(bino, half).inf_type, Boolean)
        self.assertEqual(EqualNode(bino, norm).inf_type, Boolean)
        self.assertEqual(EqualNode(bino, neg).inf_type, Boolean)
        self.assertEqual(EqualNode(half, bern).inf_type, Boolean)
        self.assertEqual(EqualNode(half, beta).inf_type, Boolean)
        self.assertEqual(EqualNode(half, bino).inf_type, Boolean)
        self.assertEqual(EqualNode(half, half).inf_type, Boolean)
        self.assertEqual(EqualNode(half, norm).inf_type, Boolean)
        self.assertEqual(EqualNode(half, neg).inf_type, Boolean)
        self.assertEqual(EqualNode(norm, bern).inf_type, Boolean)
        self.assertEqual(EqualNode(norm, beta).inf_type, Boolean)
        self.assertEqual(EqualNode(norm, bino).inf_type, Boolean)
        self.assertEqual(EqualNode(norm, half).inf_type, Boolean)
        self.assertEqual(EqualNode(norm, norm).inf_type, Boolean)
        self.assertEqual(EqualNode(norm, neg).inf_type, Boolean)
        self.assertEqual(EqualNode(neg, bern).inf_type, Boolean)
        self.assertEqual(EqualNode(neg, beta).inf_type, Boolean)
        self.assertEqual(EqualNode(neg, bino).inf_type, Boolean)
        self.assertEqual(EqualNode(neg, half).inf_type, Boolean)
        self.assertEqual(EqualNode(neg, norm).inf_type, Boolean)
        self.assertEqual(EqualNode(neg, neg).inf_type, Boolean)

        self.assertEqual(NotEqualNode(bern, bern).inf_type, Boolean)
        self.assertEqual(NotEqualNode(bern, beta).inf_type, Boolean)
        self.assertEqual(NotEqualNode(bern, bino).inf_type, Boolean)
        self.assertEqual(NotEqualNode(bern, half).inf_type, Boolean)
        self.assertEqual(NotEqualNode(bern, norm).inf_type, Boolean)
        self.assertEqual(NotEqualNode(bern, neg).inf_type, Boolean)
        self.assertEqual(NotEqualNode(beta, bern).inf_type, Boolean)
        self.assertEqual(NotEqualNode(beta, beta).inf_type, Boolean)
        self.assertEqual(NotEqualNode(beta, bino).inf_type, Boolean)
        self.assertEqual(NotEqualNode(beta, half).inf_type, Boolean)
        self.assertEqual(NotEqualNode(beta, norm).inf_type, Boolean)
        self.assertEqual(NotEqualNode(beta, neg).inf_type, Boolean)
        self.assertEqual(NotEqualNode(bino, bern).inf_type, Boolean)
        self.assertEqual(NotEqualNode(bino, beta).inf_type, Boolean)
        self.assertEqual(NotEqualNode(bino, bino).inf_type, Boolean)
        self.assertEqual(NotEqualNode(bino, half).inf_type, Boolean)
        self.assertEqual(NotEqualNode(bino, norm).inf_type, Boolean)
        self.assertEqual(NotEqualNode(bino, neg).inf_type, Boolean)
        self.assertEqual(NotEqualNode(half, bern).inf_type, Boolean)
        self.assertEqual(NotEqualNode(half, beta).inf_type, Boolean)
        self.assertEqual(NotEqualNode(half, bino).inf_type, Boolean)
        self.assertEqual(NotEqualNode(half, half).inf_type, Boolean)
        self.assertEqual(NotEqualNode(half, norm).inf_type, Boolean)
        self.assertEqual(NotEqualNode(half, neg).inf_type, Boolean)
        self.assertEqual(NotEqualNode(norm, bern).inf_type, Boolean)
        self.assertEqual(NotEqualNode(norm, beta).inf_type, Boolean)
        self.assertEqual(NotEqualNode(norm, bino).inf_type, Boolean)
        self.assertEqual(NotEqualNode(norm, half).inf_type, Boolean)
        self.assertEqual(NotEqualNode(norm, norm).inf_type, Boolean)
        self.assertEqual(NotEqualNode(norm, neg).inf_type, Boolean)
        self.assertEqual(NotEqualNode(neg, bern).inf_type, Boolean)
        self.assertEqual(NotEqualNode(neg, beta).inf_type, Boolean)
        self.assertEqual(NotEqualNode(neg, bino).inf_type, Boolean)
        self.assertEqual(NotEqualNode(neg, half).inf_type, Boolean)
        self.assertEqual(NotEqualNode(neg, norm).inf_type, Boolean)
        self.assertEqual(NotEqualNode(neg, neg).inf_type, Boolean)
